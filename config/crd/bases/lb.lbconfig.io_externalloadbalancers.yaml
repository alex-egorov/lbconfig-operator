
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: externalloadbalancers.lb.lbconfig.io
spec:
  group: lb.lbconfig.io
  names:
    kind: ExternalLoadBalancer
    listKind: ExternalLoadBalancerList
    plural: externalloadbalancers
    singular: externalloadbalancer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ExternalLoadBalancer is the Schema for the externalloadbalancers
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExternalLoadBalancerSpec is the spec of a LoadBalancer instance.
          properties:
            backend:
              description: Backend is the LoadBalancer used
              type: string
            monitor:
              description: Monitor is the path and port to monitor the LoadBalancer
                members
              properties:
                monitortype:
                  description: MonitorType is the monitor parent type. <monitorType>
                    must be one of "http", "https", "icmp", "gateway icmp", "inband",
                    "postgresql", "mysql", "udp" or "tcp".
                  type: string
                name:
                  description: Name is the monitor name, it is set by the controller
                  type: string
                path:
                  description: Path is the path URL to check for the pool members
                  type: string
                port:
                  description: Port is the port this monitor should check the pool
                    members
                  type: integer
              required:
              - monitortype
              - path
              - port
              type: object
            ports:
              description: Ports are the list of ports used for this Vip
              items:
                type: integer
              type: array
            shardlabels:
              additionalProperties:
                type: string
              description: ShardLabels are the Infra node labels used for router sharding.
                Optional.
              type: object
            type:
              description: Type is the node role type (master or infra) for the LoadBalancer
                instance
              type: string
            vip:
              description: Vip is the Virtual IP configured in  this LoadBalancer
                instance
              type: string
          required:
          - backend
          - monitor
          - ports
          - type
          - vip
          type: object
        status:
          description: ExternalLoadBalancerStatus defines the observed state of ExternalLoadBalancer
          properties:
            monitor:
              description: Monitor defines a monitor object in the LoadBalancer.
              properties:
                monitortype:
                  description: MonitorType is the monitor parent type. <monitorType>
                    must be one of "http", "https", "icmp", "gateway icmp", "inband",
                    "postgresql", "mysql", "udp" or "tcp".
                  type: string
                name:
                  description: Name is the monitor name, it is set by the controller
                  type: string
                path:
                  description: Path is the path URL to check for the pool members
                  type: string
                port:
                  description: Port is the port this monitor should check the pool
                    members
                  type: integer
              required:
              - monitortype
              - path
              - port
              type: object
            poolmembers:
              items:
                description: Node defines a host object in the LoadBalancer.
                properties:
                  host:
                    description: Host is the host IP set dynamically by the controller
                    type: string
                  label:
                    additionalProperties:
                      type: string
                    description: Label is the node labels this node has
                    type: object
                  name:
                    description: Name is the host name set dynamically by the controller
                    type: string
                required:
                - host
                type: object
              type: array
            ports:
              items:
                type: integer
              type: array
            vips:
              items:
                description: VIP defines VIP instance in the LoadBalancer with a pool
                  and port
                properties:
                  ip:
                    description: IP is the IP address this VIP instance listens to
                    type: string
                  name:
                    description: Name is the VIP instance name
                    type: string
                  pool:
                    description: Pool is the associated pool with this VIP
                    type: string
                  port:
                    description: Port is the port this VIP listens to
                    type: integer
                required:
                - ip
                - name
                - pool
                - port
                type: object
              type: array
          required:
          - monitor
          - poolmembers
          - ports
          - vips
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
