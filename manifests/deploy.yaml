apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: externalloadbalancers.lb.lbconfig.io
spec:
  group: lb.lbconfig.io
  names:
    kind: ExternalLoadBalancer
    listKind: ExternalLoadBalancerList
    plural: externalloadbalancers
    singular: externalloadbalancer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ExternalLoadBalancer is the Schema for the externalloadbalancers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExternalLoadBalancerSpec is the spec of a LoadBalancer instance.
          properties:
            backend:
              description: Backend is the LoadBalancer used
              type: string
            monitor:
              description: Monitor is the path and port to monitor the LoadBalancer members
              properties:
                monitortype:
                  description: MonitorType is the monitor parent type. <monitorType> must be one of "http", "https", "icmp", "gateway icmp", "inband", "postgresql", "mysql", "udp" or "tcp".
                  type: string
                name:
                  description: Name is the monitor name, it is set by the controller
                  type: string
                path:
                  description: Path is the path URL to check for the pool members
                  type: string
                port:
                  description: Port is the port this monitor should check the pool members
                  type: integer
              required:
              - monitortype
              - path
              - port
              type: object
            nodelabels:
              additionalProperties:
                type: string
              description: NodeLabels are the node labels used for router sharding or exposed service. Optional.
              type: object
            ports:
              description: Ports are the list of ports used for this Vip
              items:
                type: integer
              type: array
            type:
              description: Type is the node role type (master or infra) for the LoadBalancer instance
              type: string
            vip:
              description: Vip is the Virtual IP configured in  this LoadBalancer instance
              type: string
          required:
          - backend
          - monitor
          - ports
          - vip
          type: object
        status:
          description: ExternalLoadBalancerStatus defines the observed state of ExternalLoadBalancer
          properties:
            monitor:
              description: Monitor defines a monitor object in the LoadBalancer.
              properties:
                monitortype:
                  description: MonitorType is the monitor parent type. <monitorType> must be one of "http", "https", "icmp", "gateway icmp", "inband", "postgresql", "mysql", "udp" or "tcp".
                  type: string
                name:
                  description: Name is the monitor name, it is set by the controller
                  type: string
                path:
                  description: Path is the path URL to check for the pool members
                  type: string
                port:
                  description: Port is the port this monitor should check the pool members
                  type: integer
              required:
              - monitortype
              - path
              - port
              type: object
            nodes:
              items:
                description: Node defines a host object in the LoadBalancer.
                properties:
                  host:
                    description: Host is the host IP set dynamically by the controller
                    type: string
                  label:
                    additionalProperties:
                      type: string
                    description: Label is the node labels this node has
                    type: object
                  name:
                    description: Name is the host name set dynamically by the controller
                    type: string
                required:
                - host
                type: object
              type: array
            pools:
              items:
                description: Pool defines a pool object in the LoadBalancer.
                properties:
                  members:
                    description: Members is the host members of this pool
                    items:
                      description: PoolMember defines a host object in the LoadBalancer.
                      properties:
                        node:
                          description: Node is the node part of a pool
                          properties:
                            host:
                              description: Host is the host IP set dynamically by the controller
                              type: string
                            label:
                              additionalProperties:
                                type: string
                              description: Label is the node labels this node has
                              type: object
                            name:
                              description: Name is the host name set dynamically by the controller
                              type: string
                          required:
                          - host
                          type: object
                        port:
                          description: Port is the port for this pool member
                          type: integer
                      required:
                      - node
                      - port
                      type: object
                    type: array
                  monitor:
                    description: Monitor is the monitor name used on this pool
                    type: string
                  name:
                    description: Name is the Pool name, it is set by the controller
                    type: string
                required:
                - monitor
                type: object
              type: array
            ports:
              items:
                type: integer
              type: array
            vips:
              items:
                description: VIP defines VIP instance in the LoadBalancer with a pool and port
                properties:
                  ip:
                    description: IP is the IP address this VIP instance listens to
                    type: string
                  name:
                    description: Name is the VIP instance name
                    type: string
                  pool:
                    description: Pool is the associated pool with this VIP
                    type: string
                  port:
                    description: Port is the port this VIP listens to
                    type: integer
                required:
                - ip
                - name
                - pool
                - port
                type: object
              type: array
          required:
          - monitor
          - ports
          - vips
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: loadbalancerbackends.lb.lbconfig.io
spec:
  group: lb.lbconfig.io
  names:
    kind: LoadBalancerBackend
    listKind: LoadBalancerBackendList
    plural: loadbalancerbackends
    singular: loadbalancerbackend
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: LoadBalancerBackend is the Schema for the loadbalancerbackends API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: LoadBalancerBackendSpec defines the backend used by the ExternalLoadBalancer instance
          properties:
            provider:
              description: Type is the backend provider like F5, NetScaler, NSX
              properties:
                creds:
                  description: Creds credentials secret holding the username and password keys.
                  type: string
                host:
                  description: Host is the Load Balancer API IP or Hostname.
                  type: string
                partition:
                  description: Partition is the F5 partition to create the Load Balancer instances.
                  type: string
                port:
                  description: Port is the Load Balancer API Port.
                  type: integer
                validatecerts:
                  description: ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.
                  type: boolean
                vendor:
                  description: Vendor is the backend provider vendor (F5, NSX, Netscaler)
                  type: string
              required:
              - creds
              - host
              - port
              - vendor
              type: object
          required:
          - provider
          type: object
        status:
          description: LoadBalancerBackendStatus defines the observed state of LoadBalancerBackend
          properties:
            provider:
              description: Provider is a backend provider for F5 Big IP Load Balancers
              properties:
                creds:
                  description: Creds credentials secret holding the username and password keys.
                  type: string
                host:
                  description: Host is the Load Balancer API IP or Hostname.
                  type: string
                partition:
                  description: Partition is the F5 partition to create the Load Balancer instances.
                  type: string
                port:
                  description: Port is the Load Balancer API Port.
                  type: integer
                validatecerts:
                  description: ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.
                  type: boolean
                vendor:
                  description: Vendor is the backend provider vendor (F5, NSX, Netscaler)
                  type: string
              required:
              - creds
              - host
              - port
              - vendor
              type: object
          required:
          - provider
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lbconfig-operator-leader-election-role
  namespace: lbconfig-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: lbconfig-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lb.lbconfig.io
  resources:
  - externalloadbalancers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lb.lbconfig.io
  resources:
  - externalloadbalancers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lb.lbconfig.io
  resources:
  - loadbalancerbackends
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lb.lbconfig.io
  resources:
  - loadbalancerbackends/status
  verbs:
  - get
  - list
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lbconfig-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: lbconfig-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lbconfig-operator-leader-election-rolebinding
  namespace: lbconfig-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lbconfig-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: lbconfig-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lbconfig-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lbconfig-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: lbconfig-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lbconfig-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lbconfig-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: lbconfig-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-controller-manager-metrics-service
  namespace: lbconfig-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: carlosedp/lbconfig-operator:latest
        imagePullPolicy: Always
        name: manager
        resources:
          limits:
            cpu: 300m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 50
